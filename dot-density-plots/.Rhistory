str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables),clean_name] <- "Two or More Races"
race_variables$clean_name[nrow(race_variables),"clean_name"] <- "Two or More Races"
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
View(race_variables)
race_data <- rbind(illinois_f,indiana_f)
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
rm(list = ls())
gc()
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
View(race_data)
race_variables
View(race_variables)
race_data$variable[race_data$variable == race_variables$clean_name[1]]
race_variables$clean_name[1]
race_data$variable[race_data$variable == race_variables$name[1]]
View(race_variables)
race_data$race_name <- "1"
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
for(i in 1:nrow(race_variables)){
print(i)
race_data$variable[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
}
View(race_data)
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
for(i in 1:nrow(race_variables)){
print(i)
race_data$clean_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
}
View(race_data)
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
}
View(race_variables)
race_variables$SNO <- 1:nrow(race_variables)
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- race_variables$SNO[i]
}
View(race_data)
View(race_variables)
write.csv(race_data[ , c(4,5,8)], "Chicago-race.csv")
getwd()
race_data_f <- race_data[ , c(4,5,8)]
View(race_data_f)
write.csv(race_data[ , c(4,5,8)], "Chicago-race.csv", row.names = F)
getwd()
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- race_variables$SNO[i]
}
race_data_f <- race_data[ , c(4,5,8)]
write.csv(race_data[ , c(4,5,8)], "Chicago-race.csv", row.names = F)
getwd()
View(race_data_f)
str(race_data_f)
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
race_data_f <- race_data[ , c(4,5,8)]
write.csv(race_data[ , c(4,5,8)], "Chicago-race.csv", row.names = F)
getwd()
race_data[1,1]
race_data_f[1,1]
options(scipen = 999)
race_data_f[1,1]
round(race_data_f$lng, 5)
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
race_data_f <- race_data[ , c(4,5,8)]
race_data_f$lng <- round(race_data_f$lng, 5)
write.csv(race_data[ , c(4,5,8)], "Chicago-race.csv", row.names = F)
race_data_f$lng <- str_sub(race_data_f$lng, 1,8)
write.csv(race_data[ , c(4,5,8)], "Chicago-race.csv", row.names = F)
View(race_data_f)
str(race_data)
str(race_data_f)
str_sub(race_data_f$lng, 1,8)
write.csv(race_data_f, "Chicago-race.csv", row.names = F)
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
race_data_f <- race_data[ , c(4,5,8)]
race_data_f$lng <- str_sub(race_data_f$lng, 1,8)
race_data_f$lat <- str_sub(race_data_f$lat, 1,8)
write.csv(race_data_f, "Chicago-race.csv", row.names = F)
View(race_data_f)
str(race_data_f)
split_race_data_f <- split(race_data_f, race_data_f$race_Cname)
View(split_race_data_f)
names(split_race_data_f)
lapply(split_race_data_f, function(x){
print(names(x))
# write.csv(x, str_c("Race"))
})
counter <- 0
counter <- 0
lapply(split_race_data_f, function(x){
write.csv(x, str_c("Race_",counter,".csv"))
})
str_c("Race_",counter,".csv")
counter <- 1
lapply(split_race_data_f, function(x){
write.csv(x, str_c("Race_",counter,".csv"))
counter <<- counter + 1
})
getwd()
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to reolace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
race_data_f <- race_data[ , c(4,5,8)]
race_data_f$lng <- str_sub(race_data_f$lng, 1,8)
race_data_f$lat <- str_sub(race_data_f$lat, 1,8)
split_race_data_f <- split(race_data_f, race_data_f$race_Cname)
counter <- 1
lapply(split_race_data_f, function(x){
print(i)
write.csv(x, str_c("Race_",counter,".csv"))
counter <<- counter + 1
})
View(split_race_data_f)
rm(list = ls())
gc()
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to replace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
#replacaing names with race names and abbreviations
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
#extracting out absolute necessary columns
race_data_f <- race_data[ , c(4,5,8)]
#Reducing number of digits needed to store, as Github has 25MB limit
race_data_f$lng <- str_sub(race_data_f$lng, 1,8)
race_data_f$lat <- str_sub(race_data_f$lat, 1,8)
#SPlitting it by races, this will help in loading data faster
split_race_data_f <- split(race_data_f, race_data_f$race_Cname)
#saving all the split frames by their race serial number
counter <- 1
lapply(split_race_data_f, function(x){
print(counter)
write.csv(x, str_c("Race_",counter,".csv"))
counter <<- counter + 1
})
getwd()
View(split_race_data_f)
rm(list = ls())
gc()
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to replace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
#replacaing names with race names and abbreviations
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
#extracting out absolute necessary columns
race_data_f <- race_data[ , c(4,5,8)]
#Reducing number of digits needed to store, as Github has 25MB limit
race_data_f$lng <- str_sub(race_data_f$lng, 1,8)
race_data_f$lat <- str_sub(race_data_f$lat, 1,8)
#SPlitting it by races, this will help in loading data faster
split_race_data_f <- split(race_data_f, race_data_f$race_Cname)
#saving all the split frames by their race serial number
counter <- 1
lapply(split_race_data_f, function(x){
print(counter)
#wrting only x and y coordinates as code names is no longer required
#as the files are separated by races now
write.csv(x[,c(1,2)], str_c("Race_",counter,".csv"))
counter <<- counter + 1
})
getwd()
library(fst)
library(jsonlite)
library(stringr)
illinois <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Illinois_17.fst",
as.data.table = T)
indiana <- read.fst("D:\\PASSION_PROJECTS\\iqc\\national-us-racial-dot\\dots\\Indiana_18.fst",
as.data.table = T)
census_2020 <- load_variables(year = 2020, dataset = "pl")
#Adding Counties
illinois$county <- str_sub(illinois$GEOID,1,5)
indiana$county <- str_sub(indiana$GEOID,1,5)
#18089, 18127,17197, 17063, 17093,17089,17111,17097,17043,17031,17091
indiana_counties <- c('18089', '18127')
illinois_counties <- c('17197', '17063', '17093','17089','17111','17097','17043','17031','17091')
#getting the final data
indiana_f <- indiana[indiana$county %in% indiana_counties,]
illinois_f <- illinois[illinois$county %in% illinois_counties,]
race_data <- rbind(illinois_f,indiana_f)
#creating a lookup table to replace variables with race names
race_variables <- census_2020[6:12,]
race_variables$clean_name <- str_sub(race_variables$label, 37, str_length(race_variables$label))
race_variables$clean_name[nrow(race_variables)] <- "Two or More Races"
race_data$race_name <- "1"
race_variables$SNO <- 1:nrow(race_variables)
#replacaing names with race names and abbreviations
for(i in 1:nrow(race_variables)){
print(i)
race_data$race_name[race_data$variable == race_variables$name[i]] <- race_variables$clean_name[i]
race_data$race_Cname[race_data$variable == race_variables$name[i]] <- paste0(race_variables$SNO[i])
}
#extracting out absolute necessary columns
race_data_f <- race_data[ , c(4,5,8)]
#Reducing number of digits needed to store, as Github has 25MB limit
race_data_f$lng <- str_sub(race_data_f$lng, 1,8)
race_data_f$lat <- str_sub(race_data_f$lat, 1,8)
#SPlitting it by races, this will help in loading data faster
split_race_data_f <- split(race_data_f, race_data_f$race_Cname)
#saving all the split frames by their race serial number
counter <- 1
lapply(split_race_data_f, function(x){
print(counter)
#wrting only x and y coordinates as code names is no longer required
#as the files are separated by races now
#also removing row names
write.csv(x[,c(1,2)], str_c("Race_",counter,".csv"),row.names = FALSE)
counter <<- counter + 1
})
